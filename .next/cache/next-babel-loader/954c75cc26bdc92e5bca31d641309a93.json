{"ast":null,"code":"var _jsxFileName = \"E:\\\\Udemy Courses\\\\The Complete Web Developer\\\\Junior to Senior\\\\Section 08 - SPA vs Server Side Rendering\\\\next-ssr\\\\pages\\\\robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = props => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Robot\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.robots.map(robot => __jsx(\"li\", {\n    key: robot.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `robot/${robot.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, robot.name))))));\n};\n\nRobots.getInitialProps = async function () {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["E:/Udemy Courses/The Complete Web Developer/Junior to Senior/Section 08 - SPA vs Server Side Rendering/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","name","getInitialProps","res","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IACrB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,SAAQD,KAAK,CAACC,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,IAAV,CADF,CADF,CADD,CADH,CAFF,CADF;AAcD,CAfD;;AAiBAN,MAAM,CAACO,eAAP,GAAyB,kBAAiB;AACxC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AACLR,IAAAA,MAAM,EAAEO;AADH,GAAP;AAGD,CAND;;AAQA,eAAeT,MAAf","sourcesContent":["import Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Robots = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Robot</h1>\r\n      <div>\r\n        {props.robots.map(robot => (\r\n          <li key={robot.id}>\r\n            <Link href={`robot/${robot.id}`}>\r\n              <a>{robot.name}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nRobots.getInitialProps = async function() {\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/users')\r\n  const data = await res.json()\r\n  return {\r\n    robots: data\r\n  }\r\n}\r\n\r\nexport default Robots"]},"metadata":{},"sourceType":"module"}